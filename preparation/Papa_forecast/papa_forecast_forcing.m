function papa_forecast_forcing(file)

% papa_forecast_forcing
%==========================================================================
%
% USAGE:
%  papa_forecast_forcing(file)
%
% DESCRIPTION:
%  Function to to construct the forcing files for forecast at OCS Papa
%
% INPUT:
%  file - path to the text file containing subsurface profile data
%  generated by the NCL script, either for temperature or salinity.
%
% OUTPUT:
%
% AUTHOR:
%  September 27 2018. Zhihua Zheng                     [ zhihua@uw.edu ]


%% general setting

% the directory storing forcing data
basecase = '../../data/OCSPapa_forecast';

%% get OCS Papa mooring TS profiles

% ts = get_ocsp_ts();
%
% % linearly interpolate the profiles
% tmp = ts.t_prof;
% ts.t_prof = interp1(ts.depth_t(~isnan(tmp)),tmp(~isnan(tmp)),ts.depth_t,'linear');
%
% tmp = ts.s_prof;
% ts.s_prof = interp1(ts.depth_s(~isnan(tmp)),tmp(~isnan(tmp)),ts.depth_s,'linear');
% clear tmp

% !ncl get_ocsp_ts.ncl; % excute NCL script in shell

%% get GFS prediction

% Access the starting date from the text file
fileID = fopen(file);
tmp = textscan(fileID,'%s ','delimiter',' ','MultipleDelimsAsOne',1);
fclose(fileID);

tmp = tmp{1};
time = tmp{1};
time(regexp(time,'-')) = [];

% OWS P nominal location 50.1N, 144.9W
lon =  360-(144+25/60);
lat =  50+22/60;

% get the meteorological forecast at Papa
gfs = get_gfs_forecast(lon,lat,time);


%% surface stress file

fileID = fopen([basecase,'/tau_file.dat'],'w');
H = [cellstr(gfs.date) num2cell(gfs.tau_x) num2cell(gfs.tau_y)];
formatSpec = '%s  % 8.6e % 8.6e\n';

for i = 1:size(H,1)
    fprintf(fileID,formatSpec,H{i,:});
end

fclose(fileID);

%% U10 file

fileID = fopen([basecase,'/u10_file.dat'],'w');
H = [cellstr(gfs.date) num2cell(gfs.u) num2cell(gfs.v)];
formatSpec = '%s  % 8.6e % 8.6e\n';

for i = 1:size(H,1)
    fprintf(fileID,formatSpec,H{i,:});
end

fclose(fileID);

%% heat flux file

fileID = fopen([basecase,'/heatflux_file.dat'],'w');
H = [cellstr(gfs.date) num2cell(gfs.hf)];
formatSpec = '%s   % 8.6e\n';

for i = 1:size(H,1)
    fprintf(fileID,formatSpec,H{i,:});
end

fclose(fileID);

%% precipitation file

fileID = fopen([basecase,'/precip_file.dat'],'w');
H = [cellstr(gfs.date) num2cell(gfs.rain)];
formatSpec = '%s   % 8.6e\n';

for i = 1:size(H,1)
    fprintf(fileID,formatSpec,H{i,:});
end

fclose(fileID);

%% net short wave radiation (swr) file

fileID = fopen([basecase,'/swr_file.dat'],'w');
H = [cellstr(gfs.date) num2cell(gfs.sw)];
formatSpec = '%s  % 8.6e\n';

for i = 1:size(H,1)
    fprintf(fileID,formatSpec,H{i,:});
end

fclose(fileID);

%% salinity profile
%
% fileID = fopen([basecase,'/sprof_file.dat'],'w');
%
% for i = 1:size(ts.time,1)
%
%     fprintf(fileID,'%s  19  2\n',ts.date(i));
%     fprintf(fileID,'%6.1f   %9.6f\n',[-ts.depth_s'; ts.s_prof(:,i)']);
% end
%
% fclose(fileID);
%
%% temperature profile
%
% fileID = fopen([basecase,'/tprof_file.dat'],'w');
%
% for i = 1:size(ts.time,1)
%
%     fprintf(fileID,'%s  23  2\n',ts.date(i));
%     fprintf(fileID,'%6.1f   %9.6f\n',[-ts.depth_t'; ts.t_prof(:,i)']);
% end
%
% fclose(fileID);

end
